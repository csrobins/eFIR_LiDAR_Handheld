{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Initialize_filter": {
                "inputs": {
                    "variables": [
                        {
                            "name": "filter",
                            "type": "string",
                            "value": "@{if(equals(coalesce(trigger()['outputs']?['queries']?['filter'],''),''),'1 eq 1',trigger()['outputs']?['queries']?['filter'])}"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_selectQuery": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_selectQuery": {
                "inputs": {
                    "variables": [
                        {
                            "name": "selectQuery",
                            "type": "string",
                            "value": "@{if(equals(coalesce(trigger()['outputs']?['queries']?['selectQuery'],''),''),'1 eq 1',trigger()['outputs']?['queries']?['selectQuery'])}"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_selectqueryExists": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_selectqueryExists": {
                "inputs": {
                    "variables": [
                        {
                            "name": "selectExists",
                            "type": "boolean",
                            "value": "@if(equals(coalesce(trigger()['outputs']?['queries']?['selectQuery'],''),''),false,true)"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_skipCount": {
                "inputs": {
                    "variables": [
                        {
                            "name": "skipCount",
                            "type": "integer",
                            "value": "@int(coalesce(trigger()['outputs']?['queries']?['skipCount'],0))"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_filter": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_topCount": {
                "inputs": {
                    "variables": [
                        {
                            "name": "topCount",
                            "type": "integer",
                            "value": "@int(coalesce(trigger()['outputs']?['queries']?['topCount'],1000000))"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_skipCount": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Response": {
                "inputs": {
                    "body": "@{body('Get_rows_(V2)')?['value']}@{body('Get_rows_(V2)_3')?['value']}",
                    "headers": {
                        "content-type": "application/json"
                    },
                    "statusCode": 200
                },
                "kind": "Http",
                "runAfter": {
                    "check_if_select": [
                        "Succeeded"
                    ]
                },
                "type": "Response"
            },
            "check_if_select": {
                "actions": {
                    "Get_rows_(V2)_3": {
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['sql']['connectionId']"
                                }
                            },
                            "method": "get",
                            "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent(triggerOutputs()['relativePathParameters']['resource']))}/items",
                            "queries": {
                                "$filter": "@variables('filter')",
                                "$select": "@variables('selectQuery')",
                                "$skip": "@variables('skipCount')",
                                "$top": "@variables('topCount')"
                            }
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "else": {
                    "actions": {
                        "Get_rows_(V2)": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent(triggerOutputs()['relativePathParameters']['resource']))}/items",
                                "queries": {
                                    "$filter": "@variables('filter')",
                                    "$skip": "@variables('skipCount')",
                                    "$top": "@variables('topCount')"
                                }
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@variables('selectExists')",
                                "@true"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_topCount": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "manual": {
                "inputs": {
                    "method": "GET",
                    "relativePath": "/{resource}/",
                    "schema": {}
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "sql": {
                    "connectionId": "/subscriptions/9b4c654c-2ec1-4789-9f5e-f3b9e5153624/resourceGroups/eLiDAR/providers/Microsoft.Web/connections/sql-6",
                    "connectionName": "sql-6",
                    "id": "/subscriptions/9b4c654c-2ec1-4789-9f5e-f3b9e5153624/providers/Microsoft.Web/locations/canadacentral/managedApis/sql"
                }
            }
        }
    }
}